<?xml version="1.0"?>
<robot name="turtlebot_gazebo" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Microsoft Kinect / ASUS Xtion PRO Live for simulation -->
  <xacro:macro name="turtlebot_sim_3dsensor">
    <gazebo reference="camera_link">  
      <sensor type="depth" name="camera">
        <always_on>true</always_on>
        <update_rate>20.0</update_rate>
        <camera>
          <horizontal_fov>${60.0*M_PI/180.0}</horizontal_fov>
          <image>
            <format>B8G8R8</format>
            <width>640</width>
            <height>480</height>
          </image>
          <clip>
            <near>0.05</near>
            <far>8.0</far>
          </clip>
        </camera>
        <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <cameraName>camera</cameraName>
          <alwaysOn>true</alwaysOn>
          <updateRate>10</updateRate>
          <imageTopicName>rgb/image_raw</imageTopicName>
          <depthImageTopicName>depth/image_raw</depthImageTopicName>
          <pointCloudTopicName>depth/points</pointCloudTopicName>
          <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
          <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
          <frameName>camera_depth_optical_frame</frameName>
          <baseline>0.1</baseline>
          <distortion_k1>0.0</distortion_k1>
          <distortion_k2>0.0</distortion_k2>
          <distortion_k3>0.0</distortion_k3>
          <distortion_t1>0.0</distortion_t1>
          <distortion_t2>0.0</distortion_t2>
          <pointCloudCutoff>0.4</pointCloudCutoff>
        </plugin>
      </sensor>
    </gazebo>
            <gazebo>
            <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
                <rosDebugLevel>Debug</rosDebugLevel>
                <publishWheelTF>false</publishWheelTF>
                <robotNamespace>/</robotNamespace>
                <publishTf>1</publishTf>
                <publishWheelJointState>false</publishWheelJointState>
                <alwaysOn>true</alwaysOn>
                <updateRate>100.</updateRate>
                <legacyMode>true</legacyMode>
                <leftJoint>wheel_left_joint</leftJoint>
                <rightJoint>wheel_right_joint</rightJoint>
                <wheelSeparation>.230</wheelSeparation>
                <wheelDiameter>0.07</wheelDiameter>
                <broadcastTF>1</broadcastTF>
                <wheelTorque>1</wheelTorque>
                <wheelAcceleration>0.8</wheelAcceleration>
                <commandTopic>cmd_vel</commandTopic>
                <odometryFrame>odom</odometryFrame> 
                <odometryTopic>odom</odometryTopic> 
                <robotBaseFrame>base_link</robotBaseFrame>
            </plugin>
        </gazebo> 

          <gazebo reference="hokuyo_link">
        <sensor type="ray" name="head_hokuyo_sensor">
          <pose>0 0 0 0 0 0</pose>
          <visualize>false</visualize>
          <update_rate>40</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>720</samples>
                <resolution>1</resolution>
                <min_angle>-3.1415926</min_angle>
                <max_angle>3.1415926</max_angle>
              </horizontal>
	           </scan>
            <range>
              <min>0.10</min>
              <max>50.0</max>
              <resolution>0.01</resolution>
            </range>
            <noise>
              <type>gaussian</type>

               <mean>0.0</mean>
              <stddev>0.01</stddev>
            </noise>
          </ray>
            <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
            <!--topicName>/turtlebot/laser/scan</topicName-->
            <topicName>scan</topicName>
            <frameName>hokuyo_link</frameName>
        </plugin>
        </sensor>
      </gazebo>

<gazebo reference="bumper_link">
   <sensor name="bumper_bumper_sensor" type="contact">
        <visualize>true</visualize>
        <always_on>true</always_on>
        <update_rate>50.0</update_rate>
        <contact>
            <collision>base_footprint_fixed_joint_lump__bumper_link_visual_1</collision>
        </contact>
        <plugin name="gazebo_ros_bumper_controller" filename="libgazebo_ros_bumper.so">
            <robotNamespace>/robot</robotNamespace>
            <bumperTopicName>bumper_states</bumperTopicName>
            <frameName>bumper</frameName>
        </plugin>
    </sensor>
    <material>Gazebo/Red</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <gravity>true</gravity>
    <selfCollide>false</selfCollide>
</gazebo>

      
  </xacro:macro>
</robot>
